# Atlas Build Pipeline
# Triggers only on PR's to the Atlas master branch. 

# 1. Builds Atlas image, tags image with 'prod' and 'commit-sha', and pushes to ACR.
# 2. Create and run DB Migration script on the QA database
# 3. Deploy image to QA 

name: build_and_deploy_hello_world

on:
  push:
    branches:
      - che

# jobs:

#   build:

#     runs-on: ubuntu-latest

#     steps:
#     - uses: actions/checkout@v3
#     # - name: Build the Docker image
#     #   run: docker build . --file Dockerfile --tag my-image-name:$(date +%s)

#     - name: Set Commit Tag
#       run: echo "setCommitTag=$(echo $GITHUB_SHA | cut -c 1-7)" >> $GITHUB_ENV
#     - name: Display Commit Tag
#       run: echo "${{ env.setCommitTag }}"

#     - name: Docker Login
#       # You may pin to the exact commit or the version.
#       # uses: docker/login-action@dd4fa0671be5250ee6f50aedf4cb05514abda2c7
#       uses: docker/login-action@v1.14.1
#       with:
#         # Server address of Docker registry. If not set then will default to Docker Hub
#         # registry: # optional
#         # Username used to log against the Docker registry
#         username: ${{ secrets.DOCKERHUB_USERNAME }}
#         # Password or personal access token used to log against the Docker registry
#         password: ${{ secrets.DOCKERHUB_TOKEN }}
#         # Log out from the Docker registry at the end of a job
#         # logout: # optional, default is true

#     - name: Build and push Docker images
#       uses: docker/build-push-action@v2.10.0
#       with:
#         # Path to the Dockerfile
#         context: './FirstApp'
#         file: 'FirstApp/Dockerfile'
#         # List of output destinations (format: type=local,dest=path)
#         # outputs: # optional
#         # # Push is a shorthand for --output=type=registry
#         push: true
#         # List of tags
#         tags: demo-${{ env.setCommitTag }}
jobs:

  build-deploy-kub:
    runs-on: ubuntu-latest
    env:
      DOCKER_REPOSITORY: eche21 # name of Docker Hub ID
      IMAGE_NAME: helloapp
      IMAGE_TAG: ${{ github.run_number }} # $GITHUB_RUN_NUMBER
      
      #CLUSTER_NAME: aks-cluster
      #RESOURSE_GROUP: rg-aks-cluster
    
    steps:

    - name: Git Checkout
      uses: actions/checkout@v2
  
    - name: Build Docker Image
      run:
        docker build ./FirstApp/ --file ./FirstApp/Dockerfile --tag $DOCKER_REPOSITORY/$IMAGE_NAME:$GITHUB_RUN_NUMBER --build-arg=token=secrets.MYTOKEN --no-cache
#
#SCAN THE IMAGE
    - name: Run Trivy vulnerability scanner
      uses: aquasecurity/trivy-action@master
      continue-on-error: true
      with:
        image-ref: 'docker.io/${{ env.DOCKER_REPOSITORY }}/${{ env.IMAGE_NAME }}:${{ env.IMAGE_TAG }}'
        format: 'table'
        exit-code: '1'
        ignore-unfixed: true
        vuln-type: 'os,library'
        severity: 'MEDIUM,HIGH,CRITICAL'

    - name: Login to Docker Hub
      run: |
        echo "${{ secrets.DOCKERHUB_TOKEN }}" | docker login -u $DOCKER_REPOSITORY --password-stdin
